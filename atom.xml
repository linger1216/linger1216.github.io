<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LeeGoHi</title>
  <subtitle>code &amp; game</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://leegohi.com/"/>
  <updated>2017-07-28T02:40:20.000Z</updated>
  <id>http://leegohi.com/</id>
  
  <author>
    <name>lid</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>nginx_exit_status</title>
    <link href="http://leegohi.com/2017/07/28/nginx-exit-status/"/>
    <id>http://leegohi.com/2017/07/28/nginx-exit-status/</id>
    <published>2017-07-28T02:15:52.000Z</published>
    <updated>2017-07-28T02:40:20.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="nginx-amp-http-status"><a href="#nginx-amp-http-status" class="headerlink" title="nginx &amp; http status"></a>nginx &amp; http status</h1><p>这两天写程序时发现了一些有趣的行为, 当我调用下面语句, 准备返回一个错误的时候</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ngx.say(&quot;hello world&quot;)</div><div class="line">ngx.exit(401)</div></pre></td></tr></table></figure>
<p>结果response http status 返回200, 这真是日了狗了, 调试到最后是这样的结果, 任谁也没法接受, 看看文档吧.</p>
<blockquote>
<p>ngx.exit</p>
</blockquote>
<p>syntax: ngx.exit(status)</p>
<p>context: rewrite_by_lua<em>, access_by_lua</em>, content_by_lua<em>, header_filter_by_lua</em>, ngx.timer.<em>, balancer_by_lua</em>, ssl_certificate_by_lua<em>, ssl_session_fetch_by_lua</em>, ssl_session_store_by_lua*</p>
<p>When status &gt;= 200 (i.e., ngx.HTTP_OK and above), it will interrupt the execution of the current request and return status code to nginx.</p>
<p>When status == 0 (i.e., ngx.OK), it will only quit the current phase handler (or the content handler if the content_by_lua* directive is used) and continue to run later phases (if any) for the current request.</p>
<p>说的很清楚, 大于200的状态会通知到nginx, 通知个毛线.</p>
<p>没办法只有做了一下实验</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ngx.exit(401)</div><div class="line"></div><div class="line">response: (status 401)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ngx.say(&quot;hello world&quot;)</div><div class="line">ngx.exit(401)</div><div class="line"></div><div class="line">response: hello world (status 200)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ngx.status = 401</div><div class="line">ngx.say(&quot;hello world&quot;)</div><div class="line">ngx.exit(401)</div><div class="line"></div><div class="line">response: hello world (status 401)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ngx.status = 401</div><div class="line">ngx.say(&quot;hello world&quot;)</div><div class="line">ngx.exit(200)</div><div class="line"></div><div class="line">response: hello world (status 401)</div></pre></td></tr></table></figure>
<h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>如果要返回异常状态, 请务必手动写上ngx.status</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;nginx-amp-http-status&quot;&gt;&lt;a href=&quot;#nginx-amp-http-status&quot; class=&quot;headerlink&quot; title=&quot;nginx &amp;amp; http status&quot;&gt;&lt;/a&gt;nginx &amp;amp; http stat
    
    </summary>
    
    
      <category term="nginx lua openresty" scheme="http://leegohi.com/tags/nginx-lua-openresty/"/>
    
  </entry>
  
  <entry>
    <title>再也不用担心设置Mongo的Auth啦</title>
    <link href="http://leegohi.com/2017/07/22/docker-mongo-auth-images/"/>
    <id>http://leegohi.com/2017/07/22/docker-mongo-auth-images/</id>
    <published>2017-07-22T02:24:56.000Z</published>
    <updated>2017-07-22T02:38:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>mongo默认是不带鉴权的, 每次都要手动–auth, 很麻烦, 于是干脆做个images, 方便以后需要.</p>
<p><strong>Path</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">--|</div><div class="line">---------Dockerfile</div><div class="line">---------init.sh</div></pre></td></tr></table></figure>
<p><strong>Dockerfile</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">FROM mongo</div><div class="line"></div><div class="line">ADD init.sh /init.sh</div><div class="line">RUN \</div><div class="line"> chmod +x /init.sh &amp;&amp; \</div><div class="line"> apt-get update &amp;&amp; apt-get dist-upgrade -y &amp;&amp; \</div><div class="line"> apt-get install psmisc -y -q &amp;&amp; \</div><div class="line"> apt-get autoremove -y &amp;&amp; apt-get clean &amp;&amp; \</div><div class="line"> rm -rf /var/cache/* &amp;&amp; rm -rf /var/lib/apt/lists/*</div><div class="line"></div><div class="line">ENTRYPOINT [&quot;/init.sh&quot;]</div></pre></td></tr></table></figure>
<p><strong>init.sh</strong><br>这里设置的是root权限, 基本上就是上帝模式, 如果觉得不妥, 请自行修改</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">if test -z &quot;$MONGO_PASSWD&quot;; then</div><div class="line">    echo &quot;MONGO_PASSWD not defined&quot;</div><div class="line">    exit 1</div><div class="line">fi</div><div class="line"></div><div class="line">(</div><div class="line">echo &quot;setup mongo auth ...&quot;</div><div class="line">auth=&quot;-u admin -p $MONGO_PASSWD&quot;</div><div class="line">js=&quot;if (!db.getUser(&apos;admin&apos;)) &#123; db.createUser(&#123; user: &apos;admin&apos;, pwd: &apos;$MONGO_PASSWD&apos;, roles: [ &#123;role:&apos;root&apos;, db:&apos;admin&apos;&#125;]&#125;) &#125;&quot;</div><div class="line">until mongo admin --eval &quot;$js&quot; || mongo admin $auth --eval &quot;$js&quot;; do sleep 5; done</div><div class="line">echo &quot;completed auth setup, killing naked mongo&quot;</div><div class="line">killall mongod</div><div class="line">sleep 1</div><div class="line">killall -9 mongod</div><div class="line">) &amp;</div><div class="line"></div><div class="line">echo &quot;start mongodb wihtout auth&quot;</div><div class="line">chown -R mongodb /data/db</div><div class="line">gosu mongodb mongod --bind_ip=127.0.0.1 &quot;$@&quot;</div><div class="line"></div><div class="line">echo &quot;restarting with auth on&quot;</div><div class="line">sleep 5</div><div class="line">exec gosu mongodb mongod --auth &quot;$@&quot;</div></pre></td></tr></table></figure>
<p><strong>build</strong></p>
<p>漫长的等待</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker build -t mongo-auth:lid .</div></pre></td></tr></table></figure>
<p><strong>使用</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">docker run --net=&quot;host&quot; \ </div><div class="line">            --name mongo \ </div><div class="line">            -e MONGO_PASSWD=123456 \ </div><div class="line">            -p 27017:27017 \ </div><div class="line">            -v /opt/mongodb/data/single:/data/db \ </div><div class="line">            -d mongo-auth:lid</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mongo默认是不带鉴权的, 每次都要手动–auth, 很麻烦, 于是干脆做个images, 方便以后需要.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Path&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl
    
    </summary>
    
    
      <category term="docker mongo auth authentication db" scheme="http://leegohi.com/tags/docker-mongo-auth-authentication-db/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://leegohi.com/2017/07/17/hello-world/"/>
    <id>http://leegohi.com/2017/07/17/hello-world/</id>
    <published>2017-07-17T05:26:53.000Z</published>
    <updated>2017-07-17T05:26:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
